<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>

    <!-- 引入配置文件,非必须 -->
    <!--<properties resource="mybatis/db.properties"/>-->

    <!-- 指定数据库驱动jar地址,可以pom.xml中设置 -->
    <!--<classPathEntry location="${user.home}/.m2/repository/mysql/mysql-connector-java/5.1.44/mysql-connector-java-5.1.44.jar"/>-->

    <!-- 配置环境
     defaultModelType:指定生成模型类型策略
     1.conditional:这是默认值,这个模型和下面的hierarchical类似，除了如果那个单独的类将只包含一个字段，将不会生成一个单独的类。 因此,如果一个
     表的主键只有一个字段,那么不会为该字段生成单独的实体类,会将该字段合并到基本实体类中。
     2.flat:该模型为每一张表只生成一个实体类。这个实体类包含表中的所有字段。
     3.hierarchical:如果表有主键,那么该模型会产生一个单独的主键实体类,如果表还有BLOB字段， 则会为表生成一个包含所有BLOB字段的单独的实体类,然
     后为所有其他的字段生成一个单独的实体类。 MBG会在所有生成的实体类之间维护一个继承关系。 -->
    <context id="mysql" defaultModelType="flat">
        <!-- 自动生成tostring方法 -->
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>
        <!-- 自动生成equals方法和hashcode方法 -->
        <plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin"/>
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>

        <!-- 查询单条数据插件 -->
        <plugin type="com.itfsw.mybatis.generator.plugins.SelectOneByExamplePlugin"/>
        <!-- 查询结果选择性返回插件 -->
        <plugin type="com.itfsw.mybatis.generator.plugins.SelectSelectivePlugin"/>
        <!-- Example Criteria 增强插件 -->
        <plugin type="com.itfsw.mybatis.generator.plugins.ExampleEnhancedPlugin"/>
        <!-- 数据Model属性对应Column获取插件 -->
        <plugin type="com.itfsw.mybatis.generator.plugins.ModelColumnPlugin"/>
        <!-- swagger支持 -->
        <plugin type="mybatis.generator.plugins.GeneratorSwagger2Doc">
            <property name="apiModelAnnotationPackage" value="io.swagger.annotations.ApiModel" />
            <property name="apiModelPropertyAnnotationPackage" value="io.swagger.annotations.ApiModelProperty" />
        </plugin>

        <!-- 逻辑删除插件 -->
        <plugin type="com.itfsw.mybatis.generator.plugins.LogicalDeletePlugin">
            <!-- 这里配置的是全局逻辑删除列和逻辑删除值，当然在table中配置的值会覆盖该全局配置 -->
            <!-- 逻辑删除列类型只能为数字、字符串或者布尔类型 -->
            <property name="logicalDeleteColumn" value="deleted"/>
            <!-- 逻辑删除-已删除值 -->
            <property name="logicalDeleteValue" value="1"/>
            <!-- 逻辑删除-未删除值 -->
            <property name="logicalUnDeleteValue" value="0"/>
        </plugin>
        <!-- 乐观锁插件 -->
        <plugin type="com.itfsw.mybatis.generator.plugins.OptimisticLockerPlugin"/>

        <!-- 是否取消注释 -->
        <commentGenerator>
            <property name="suppressAllComments"  value="false"/>
        </commentGenerator>

        <!-- jdbc连接 -->
       <!-- <jdbcConnection driverClass="${jdbc.driverClassName}"
                        connectionURL="${jdbc.url}"
                        userId="${jdbc.username}" password="${jdbc.password}"/>-->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/spider?useUnicode = true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull"
                        userId="root" password="root"/>

        <!-- 生成实体类 -->
        <javaModelGenerator targetPackage="com.sohu.article.model"
                            targetProject="src/main/java"/>

        <!-- 生成maper.xml文件 -->
        <sqlMapGenerator targetPackage="mapper"
                         targetProject="src/main/resources"/>


        <!-- 生成dao接口 -->
        <javaClientGenerator targetPackage="com.sohu.article.dao"
                             targetProject="src/main/java" type="XMLMAPPER"/>

        <!-- 配置表信息,不生成帮助类examples-->
        <table schema="" tableName="cover_user" domainObjectName="CoverUserEntity"
               enableCountByExample="true" enableDeleteByExample="true"
               enableSelectByPrimaryKey="true" enableDeleteByPrimaryKey="true"
               enableUpdateByPrimaryKey="true"
               enableSelectByExample="true" enableUpdateByExample="true">
            <property name="versionColumn" value="version"/>
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>
        </table>
    </context>
</generatorConfiguration>